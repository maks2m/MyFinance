alter table if exists deposit drop constraint if exists deposit_user_fk;
alter table if exists expenses drop constraint if exists expenses_user_fk;
alter table if exists income drop constraint if exists income_user_fk;
alter table if exists transaction_deposit_expenses drop constraint if exists transaction_deposit_expenses_deposit_fk;
alter table if exists transaction_deposit_expenses drop constraint if exists transaction_deposit_expenses_expenses_fk;
alter table if exists transaction_deposit_expenses drop constraint if exists transaction_deposit_expenses_user_fk;
alter table if exists transaction_income_deposit drop constraint if exists transaction_income_deposit_deposit_fk;
alter table if exists transaction_income_deposit drop constraint if exists transaction_income_deposit_income_fk;
alter table if exists transaction_income_deposit drop constraint if exists transaction_income_deposit_user_fk;
alter table if exists user_role drop constraint if exists buffer_role_fk;
alter table if exists user_role drop constraint if exists buffer_user_fk;

drop table if exists deposit cascade;
drop table if exists expenses cascade;
drop table if exists income cascade;
drop table if exists role cascade;
drop table if exists transaction_deposit_expenses cascade;
drop table if exists transaction_income_deposit cascade;
drop table if exists user_role cascade;
drop table if exists usr cascade;

create table deposit (id int8 generated by default as identity, money int8, name varchar(255), id_user int8, primary key (id));
create table expenses (id int8 generated by default as identity, fact_money int8, name varchar(255), plan_money int8, id_user int8, primary key (id));
create table income (id int8 generated by default as identity, fact_money int8, name varchar(255), plan_money int8, id_user int8, primary key (id));
create table role (id int8 generated by default as identity, role_text varchar(255) not null, primary key (id));
create table transaction_deposit_expenses (id int8 generated by default as identity, date date, money int8, id_deposit int8, id_expenses int8, id_user int8, primary key (id));
create table transaction_income_deposit (id int8 generated by default as identity, date date, money int8, id_deposit int8, id_income int8, id_user int8, primary key (id));
create table user_role (id_user int8 not null, id_role int8 not null, primary key (id_role, id_user));
create table usr (id int8 generated by default as identity, active boolean, first_name varchar(255), full_name varchar(255), last_name varchar(255), password varchar(255), username varchar(255) not null, primary key (id));

alter table if exists role add constraint UK_role_role unique (role_text);
alter table if exists usr add constraint UK_user_username unique (username);
alter table if exists deposit add constraint deposit_user_fk foreign key (id_user) references usr;
alter table if exists expenses add constraint expenses_user_fk foreign key (id_user) references usr;
alter table if exists income add constraint income_user_fk foreign key (id_user) references usr;
alter table if exists transaction_deposit_expenses add constraint transaction_deposit_expenses_deposit_fk foreign key (id_deposit) references deposit;
alter table if exists transaction_deposit_expenses add constraint transaction_deposit_expenses_expenses_fk foreign key (id_expenses) references expenses;
alter table if exists transaction_deposit_expenses add constraint transaction_deposit_expenses_user_fk foreign key (id_user) references usr;
alter table if exists transaction_income_deposit add constraint transaction_income_deposit_deposit_fk foreign key (id_deposit) references deposit;
alter table if exists transaction_income_deposit add constraint transaction_income_deposit_income_fk foreign key (id_income) references income;
alter table if exists transaction_income_deposit add constraint transaction_income_deposit_user_fk foreign key (id_user) references usr;
alter table if exists user_role add constraint buffer_role_fk foreign key (id_role) references role;
alter table if exists user_role add constraint buffer_user_fk foreign key (id_user) references usr;

insert into public.usr (active, first_name, full_name, last_name, password, username)
values  (true, 'Михаил', 'Елкин М.С.', 'Елкин', 'elkin', 'elkin'),
        (true, 'Иван', 'Иванов И.И.', 'Иванов', 'ivanov', 'ivanov'),
        (true, 'Перт', 'Петров П.П.', 'Петров', 'petrov', 'petrov'),
        (true, 'Сидор', 'Сидоров С.С.', 'Сидоров', 'sidorov', 'sidorov');

create extension if not exists pgcrypto;
update usr
set password = crypt(password, gen_salt('bf', 8));

insert into public.role (role_text)
values  ('USER'),
        ('ADMIN');

insert into public.user_role (id_user, id_role)
values  (1, 1),
        (2, 1),
        (3, 1),
        (4, 1),
        (1, 2);

insert into public.income (fact_money, name, plan_money, id_user)
values  (30000, 'work', 30000, 1),
        (2000, 'deposit', 2000, 1),
        (2000, 'калым', 2000, 2);

insert into public.deposit (money, name, id_user)
values  (0, 'cash', 1),
        (0, 'credit card', 1),
        (500, 'кошелек', 2);

insert into public.expenses (fact_money, name, plan_money, id_user)
values  (2000, 'auto', 3000, 1),
        (30000, 'food', 8000, 1),
        (1500, 'сигареты', 1000, 2);

insert into public.transaction_income_deposit (date, money, id_deposit, id_income, id_user)
values  ('2022-05-01', 15000, 2, 1, 1),
        ('2022-05-15', 15000, 2, 1, 1),
        ('2022-05-05', 2000, 1, 2, 1),
        ('2022-06-22', 1000, 3, 3, 2),
        ('2022-06-01', 1000, 3, 3, 2);

insert into public.transaction_deposit_expenses (date, money, id_deposit, id_expenses, id_user)
values  ('2022-05-01', 5000, 2, 2, 1),
        ('2022-05-06', 5000, 2, 2, 1),
        ('2022-05-11', 5000, 2, 2, 1),
        ('2022-05-16', 5000, 2, 2, 1),
        ('2022-05-21', 5000, 2, 2, 1),
        ('2022-05-26', 5000, 2, 2, 1),
        ('2022-05-07', 2000, 1, 1, 1),
        ('2022-06-21', 500, 3, 3, 2),
        ('2022-06-15', 500, 3, 3, 2),
        ('2022-06-13', 500, 3, 3, 2);

